name: Packwiz Modrinth Export and Release

on:
  push:
    tags:
      - 'v*.*.*' # Trigger on version tags, e.g., v1.0.0
  workflow_dispatch: # Allow manual triggering of the workflow
    inputs:
      tag_name:
        description: "Tag for the release (e.g., v1.0.0)"
        required: false
      release_name:
        description: "Release name (defaults to tag name)"
        required: false

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up Go
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.21  # Adjust the Go version as needed

      # Install packwiz
      - name: Install Packwiz
        run: |
          go install github.com/packwiz/packwiz@latest
          export PATH=$PATH:$(go env GOPATH)/bin

      # Run packwiz modrinth export
      - name: Generate .mrpack file
        run: |
          packwiz modrinth export -o modpack.mrpack

      # Create the GitHub release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.event.inputs.tag_name || github.ref_name }}
          release_name: ${{ github.event.inputs.release_name || github.ref_name }}
          body: "Automatically generated release"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Upload modpack.mrpack
      - name: Upload modpack.mrpack
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: modpack.mrpack
          asset_name: modpack.mrpack
          asset_content_type: application/octet-stream

      # Upload world.zip
      - name: Upload world.zip
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: world.zip
          asset_name: world.zip
          asset_content_type: application/zip
